apply plugin: 'com.android.library'
apply from: "$rootDir/ci_utils.gradle"

android{
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
		
		def root="${project.rootDir}"
		def ext=project.ext
		buildConfigField "String", "GIT_REVISION_HASH", "\"${getHashOfRepo('','Wisecraft',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_I18N", "\"${getHashOfRepo('wisecraft-i18n','Wisecraft-Multilanguage',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_STATUSES_LAYOUT", "\"${getHashOfRepo('statusesLayout','StatusesLayout',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_MATERIAL_ICONS", "\"${getHashOfRepo('MaterialIcons','MaterialIconsLight',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_CALLIGRAPHY", "\"${getHashOfRepo('calligraphy','Calligraphy-Wisecraft',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_PSTS", "\"${getHashOfRepo('psts','Wisecraft-PagerSlidingTabStrip',root)}\""
		buildConfigField "String", "GIT_REVISION_HASH_COLOR_PICKER", "\"${getHashOfRepo('colorPicker','Wisecraft-AndroidPhotoshopColorPicker',root)}\""
		
		buildConfigField "String","CI_BUILD_ID","\"${ext.buildId()}\""
		buildConfigField "String","CI_BUILD_REF_NAME","\"${ext.buildRef()}\""
		buildConfigField "String","CI_RUNNER_ID","\"${ext.runnerId()}\""
		buildConfigField "String","CI_BUILD_STAGE","\"${ext.buildStage()}\""
		buildConfigField "String","CI_BUILD_NAME","\"${ext.buildName()}\""
		buildConfigField "String","CI_PIPELINE_ID","\"${ext.pipeline()}\""
		buildConfigField "String","APP_BUILT_ON","\"${ext.builtOn()}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
	lintOptions {
        abortOnError false
    }
}

dependencies {
	if(1)compile "com.android.support:support-compat:$supportLibVersion"
	if(1)compile "com.android.support:support-fragment:$supportLibVersion"
	if(1)compile "com.android.support:appcompat-v7:$supportLibVersion"
	if(1)compile "com.android.support:design:$supportLibVersion"
	if(1)compile "com.android.support:cardview-v7:$supportLibVersion"
	if(1)compile "com.android.support:preference-v7:$supportLibVersion"
	
	if(1)compile "com.google.firebase:firebase-config:$firebaseVersion"
	if(1)compile "com.google.firebase:firebase-crash:$firebaseVersion"
	
	compile 'com.google.code.gson:gson:2.8.0'
	compile 'com.github.fiskurgit:MarkdownView:1.1.0'
    
	compile project(':scrolling')
	compile project(':wisecraft-i18n')
	compile project(':psts')
    compile fileTree(dir: 'libs', include: ['*.jar'])
	
	compile('com.mikepenz:materialdrawer:+') {
		transitive = true
	}
	//These lines are required to write code using AIDE. Please not to remove them.
	if(0){
		compile 'com.mikepenz:materialize:+'
    	compile 'com.mikepenz:iconics-core:+'
    	compile 'com.mikepenz:fastadapter:+'
		compile "com.android.support:support-compat:25.3.1"
		compile "com.android.support:support-fragment:25.3.1"
		compile "com.android.support:appcompat-v7:25.3.1"
		compile "com.android.support:design:25.3.1"
		compile "com.android.support:cardview-v7:25.3.1"
		compile "com.android.support:preference-v7:25.3.1"
		compile "com.google.firebase:firebase-config:10.0.1"
		compile "com.google.firebase:firebase-crash:10.0.1"
	}
}


def getHashOfRepo(String modul,String name,root){
	def revisionHash
	if(!System.getProperty("os.name").toLowerCase().contains("windows")){
		revisionHash = ["sh",  "-c",  "cd $root/$modul ; git rev-parse HEAD"].execute().in.text.trim()
	}else{
		revisionHash = ["cmd",  "/c",  "git rev-parse HEAD"].execute(null,new File(root,modul)).in.text.trim()
	}
	if(!revisionHash.matches("^[0-9a-fA-F]+\$")){
		revisionHash = "Unknown"
	}
	println "Git Revision of $name is: $revisionHash"
	return revisionHash
}

