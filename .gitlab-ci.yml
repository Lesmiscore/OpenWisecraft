image: "nao20010128nao/android-build:latest"

.artifacts: &artf
  artifacts:
    paths:
      - "*.apk"
      - dexdump*.txt
      - build.log
      - powof2.txt
      - "*/build/outputs/aar/*"
      - tree-*.log
      - "*/build/outputs/mapping/*/mapping.txt"
      - "*/build/generated/source/*"
      - "autogen-*.*"

.main_script: &scrpt
  script:
    - "gradle $TASK --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

before_script:
  - chmod a+x ./ci/*
  - source ./ci/prepare.sh
  - if [[ $CI_BUILD_STAGE != postBuild ]]; then gradle modifyValuesXml modifyBooleansXml --info --stacktrace | tee -a build.log > /dev/null; fi

stages:
  - app
  - rcon
  - postBuild

main1: # Build for app debug APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assembleDebug"

main2: # Build for app debug APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assembleDebug2"

main3: # Build for app debug APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assembleDebug2TestObs"

main4: # Build for app debug(obfuscated) APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assemblePg"

main5: # Build for app debug(obfuscated) APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assemblePg_ult"

main6: # Build for app release APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assembleRelease"

main7: # Build for app release(obfuscated) APKs
  <<: *artf
  <<: *scrpt
  stage: app
  variables:
    TASK: ":app:assembleShrinkRelease"

main8: # Build for app pre(non-obfuscated and obfuscated) APKs
  <<: *artf
  stage: app
  script:
    # Because it needs conditions to run, we don't use scrpt
    - DIR=`cat ./app/build.gradle | grep "def preNum="`
    - DIR=${DIR% //*}
    - "DIR=${DIR#*=}"
    - "if [ $DIR != \"0\" ]; then gradle :app:assemblePre :app:assembleShrinkPre --info --stacktrace | tee -a build.log > /dev/null; fi"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main9: # Build for WRcon APKs
  <<: *artf
  <<: *scrpt
  stage: rcon
  variables:
    TASK: ":rconApp:build"

main10: # Build for Rcon Password Cracker APKs
  <<: *artf
  <<: *scrpt
  stage: rcon
  variables:
    TASK: ":rconPassCrack:build"

mainLast:
  <<: *artf
  stage: postBuild
  script:
    - unzip app-release.apk -d unzippedApkA > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkA/classes.dex > dexdump-app.txt
    - unzip rconApp-release.apk -d unzippedApkB > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkB/classes.dex > dexdump-rcon.txt
    - unzip rconPassCrack-release.apk -d unzippedApkC > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkC/classes.dex > dexdump-rconPC.txt
    - unzip app-pg.apk -d unzippedApkD > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkD/classes.dex > dexdump-appObs.txt
    - grep "Git\sRevision" build.log

copy:
  stage: postBuild
  script:
    - source ./ci/copy.sh
