image: "nao20010128nao/android-build:latest"

.artifacts: &artf
  artifacts:
    paths:
      - "*.apk"
      - dexdump*.txt
      - build.log
      - powof2.txt
      - "*/build/outputs/aar/*"
      - tree-*.log
      - "*/build/outputs/mapping/*/mapping.txt"
      - "*/build/generated/source/*"
      - "autogen-*.*"

before_script:
  - chmod a+x ./ci/*
  - source ./ci/prepare.sh
  - if [[ $CI_BUILD_STAGE != copy ]]; then gradle modifyValuesXml modifyBooleansXml --info --stacktrace | tee -a build.log > /dev/null; fi

stages:
  - main1
  - main2
  - main3
  - main4
  - main5
  - main6
  - main7
  - main8
  - mainLast
  - copy

main1: # Build for app debug APKs
  <<: *artf
  stage: main1
  script:
    - "gradle :app:assembleDebug :app:assembleDebug2 :app:assembleDebug2TestObs --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main2: # Build for app debug(obfuscated) APKs
  <<: *artf
  stage: main2
  script:
    - "gradle :app:assemblePg --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main3: # Build for app debug(obfuscated) APKs
  <<: *artf
  stage: main3
  script:
    - "gradle :app:assemblePg_ult --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main4: # Build for app release APKs
  <<: *artf
  stage: main4
  script:
    - "gradle :app:assembleRelease --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main5: # Build for app release(obfuscated) APKs
  <<: *artf
  stage: main5
  script:
    - "gradle :app:assembleShrinkRelease --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main6: # Build for app pre(non-obfuscated and obfuscated) APKs
  <<: *artf
  stage: main6
  script:
    - DIR=`cat ./app/build.gradle | grep "def preNum="`
    - DIR=${DIR% //*}
    - "DIR=${DIR#*=}"
    - "if [ $DIR != \"0\" ]; then gradle :app:assemblePre :app:assembleShrinkPre --info --stacktrace | tee -a build.log > /dev/null; fi"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main5: # Build for WRcon APKs
  <<: *artf
  stage: main5
  script:
    - "gradle :rconApp:build --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

main8: # Build for Rcon Password Cracker APKs
  <<: *artf
  stage: main8
  script:
    - "gradle :rconPassCrack:build --info --stacktrace | tee -a build.log > /dev/null"
    - mv */build/outputs/apk/*.apk .
    - ./ci/packageInformations.sh

mainLast:
  <<: *artf
  stage: mainLast
  script:
    - unzip app-release.apk -d unzippedApkA > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkA/classes.dex > dexdump-app.txt
    - unzip rconApp-release.apk -d unzippedApkB > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkB/classes.dex > dexdump-rcon.txt
    - unzip rconPassCrack-release.apk -d unzippedApkC > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkC/classes.dex > dexdump-rconPC.txt
    - unzip app-pg.apk -d unzippedApkD > /dev/null
    - $ANDROID_HOME/build-tools/25.0.0/dexdump -d unzippedApkD/classes.dex > dexdump-appObs.txt
    - grep "Git\sRevision" build.log

copy:
  stage: copy
  script:
    - source ./ci/copy.sh
